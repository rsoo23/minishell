
Parsing

1. Search for <<, get limiter 
2. Search for <, get infile_fd
3. Search for > or >>, get outfile_fd

Current Format: [input redir] [output redir] [cmd1] [|] ...

Tests
1. Simple commands
    - [x] echo
    - [x] echo -n
    - [x] ls -l -a -h
    - [x] cd ../Documents/Core

2. Only Pipes:
    - [x] ls -la | wc -w 
    - [x] ls -la | wc -w | cat | cat 

3. Both < and >:
    - [x] ls -la > outfile.txt
    - [x] cat > outfile.txt -e
    - [x] cat < infile.txt -e
    - [x] sort < infile.txt
    - [x] sort < infile.txt | ls -l 
    - [x] sort < infile.txt | ls -l | cat 
    - [x] grep hi < infile.txt | ls -l | cat > outfile.txt

4. Both << and >>:
    - [x] ls -la >> outfile
    - [x] << limiter
    - [x] cmd << limiter
    - [x] cmd << limiter >> outfile
    - [x] cmd << limiter | cmd >> outfile

5. <>: receive input from file, output to STDOUT
    - [x] wc -wl <> main.c

6. Multiple + Mixed Input Redir 
    - [x] wc -w << stop << hi ..
        - last heredoc takes precedence for wc -w
        - prev heredocs still execute

    - [x] wc -w << stop | wc -w << hi
    
    - [x] wc -w << stop < srcs/main.c
        - < takes precedence for wc -w but heredoc still works

    - [x] wc -w << stop < srcs/main.c << hi
        - 1st heredoc works, 2nd heredoc takes precedence and inputs to wc -w

    - [x] wc -w < srcs/main.c << stop
        - heredoc takes precedence

    - Notes:
        - rearrange the cmd infront of heredoc behind last output redir (problem: wc < .. < .. > .. -w)
        - shift the input redir infront of wc (cmd)
        - shift the output redir behind the flag

7. Mixed < > << >>
    - [x] wc -w < srcs/main.c >a >b >c
        - a, b and c gets created if do not exist
        - only c gets the output

    - [x] wc -w < srcs/main.c > hi | << stop

    - [x] wc << hi > a << stop > b -w
        - behaves like: wc -w << hi << stop > a > b

    - [x] wc < main.c > hi -w > a
        - behaves like: wc -w < main.c > hi > a

    - [x] wc < main.c > hi -w > a -l
        - behaves like: wc -w -l < main.c > hi > a

Special:
    - [x] wc -w << stop << boom << hi |
        - pipe left hanging, waits for input of cmd to read from pipe

cc -Wall -Wextra -Werror parsing/*.c tokenizing/*.c metachar_check.c ../libft/libft.a -lreadline -fsanitize=address -ggdb